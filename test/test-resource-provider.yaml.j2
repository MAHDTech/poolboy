---
apiVersion: gpte.redhat.com/v1
kind: ResourceProvider
metadata:
  name: {{ name | default('test') }}
  namespace: {{ operator_namespace }}
spec:
  match:
    apiVersion: gpte.redhat.com/v1
    kind: ResourceClaimTest
    metadata:
      annotations:
        gpte.redhat.com/resource-provider-name: {{ name | default('test') }}
        gpte.redhat.com/resource-provider-namespace: {{ operator_namespace }}
{% raw %}
  matchIgnore:
  - /spec/desiredState
  - /spec/actionSchedule(/.*)?
  # Override is automatically applied when handle is processed
  # Claim init is applied to the claim when it created
  claimInit:
    spec:
      actionSchedule:
        destroy: "{{: timestamp.utcnow.add('8d') :}}"
        stop: "{{: timestamp.utcnow.add('8h') :}}"
      desiredState: started
  default:
    spec:
      actionSchedule: {}
      desiredState: started
  override:
    metadata:
      namespace: {% endraw %}{{ operator_test_namespace }}{% raw %}
    spec:
      etc:
        guid: "{{: resource_handle.metadata.name[-5:] :}}"
  updateFilters:
  - pathMatch: /spec/actionSchedule/destroy
    allowedOps: ['add', 'replace']
    valueValidation:
      type: datetime
      maximum: >-
        {%: if resource_claim -:%}
        {{: timestamp(resource_claim.metadata.creationTimestamp).add('14d') :}}
        {%:- else -:%}
        {{: timestamp.utcnow.add('14d') :}}"
        {%:- endif :%}
  - pathMatch: /spec/actionSchedule/stop
    allowedOps: ['add', 'replace']
    valueValidation:
      type: datetime
      maximum: "{{: currentTimestamp.add('8h') :}}"
  - pathMatch: /spec/desiredState
    allowedOps: ['add', 'replace']
    valueValidation:
      type: string
      enum: ['started', 'stopped']
  validation:
    openAPIV3Schema:
      type: object
      required:
      - apiVersion
      - kind
      - spec
      additionalProperties: false
      properties:
        apiVersion:
          type: string
          enum:
          - gpte.redhat.com/v1
        kind:
          type: string
          enum:
          - ResourceClaimTest
        metadata:
          type: object
          additionalProperties: false
          properties:
            annotations:
              type: object
              additionalProperties:
                type: string
        spec:
          type: object
          required:
          - governor
          additionalProperties: false
          properties:
            actionSchedule:
              type: object
              additionalProperties: false
              properties:
                destroy:
                  pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                  type: string
                stop:
                  pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
                  type: string
            desiredState:
              type: string
              enum:
              - started
              - stopped
            governor:
              type: string
            parameters:
              type: object
{% endraw %}
